def classify_poker_hand(poker_hand)
#  :unexpected_return_value
  # high card with 
  state = nil
  poker_hand.sort.each_cons(3) do |card|
    if (card[1] - card[0] == 1) && (card[2] - card[1] == 1)
      state = :high_card
    end
  end
  
  # high card with 4
  poker_hand.sort.each_cons(4) do |card|
    if (card[0]+card[3]) == (card[1]+card[2] && ((card[1] - card[0]) == 1))
      state = :high_card
    end
  end
  
  # pairs
  nr = 0
  poker_hand.sort.each_cons(2) do |card|
    if card[0] == card[1]
      nr+=1
    end
  end

  if nr == 1 
    state = :one_pair
  elsif nr == 2 
    state = :two_pairs
  end

  poker_hand.sort.each_cons(3) do |card|
    if card[0] == card[1] && card[1] == card[2]
      state = :three_of_a_kind
    end
  end 
 
  # straight
  temp = poker_hand.sort;
  sum = temp.inject(0) do |acc, item|
    acc + item 
  end
  if (sum == (temp.first+temp.last)*5/2) && (temp[1]-temp[0] == 1)
    state = :straight
  end

  # full house and four of a kind
  temp = Hash.new(0)
  
  poker_hand.each { |card| temp[card]+=1 }

  if temp.values.include?(2) && temp.values.include?(3)
    state = :full_house
  elsif temp.values.include?(1) && temp.values.include?(4)
    state = :four_of_a_kind
  end

  # ordinary hand
  if temp.values.length == 5 && state != :high_card && state != :straight
    state = :valid_but_nothing_special 
  end

  state
end

derp = classify_poker_hand([2,9,5,7,3])
p derp
